{"ast":null,"code":"// // Home.jsx\n// import React, { useEffect, useState } from \"react\";\n// import Navbar from \"../components/Navbar\";\n// import Cards from \"../components/Cards\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { newBoardDispatch, addCard } from \"../redux/todoSlice\";\n// import toast, { Toaster } from \"react-hot-toast\";\n\n// const Home = () => {\n//   const dispatch = useDispatch();\n//   const states = useSelector((card) => card.todo);\n\n//   const [stateToMap, setStateToMap] = useState(\n//     states?.currState === \"mainCard\" ? states.mainCard : states.newBoard\n//   );\n\n//   const changeState = () => {\n//     dispatch(newBoardDispatch());\n\n//     if (states.currState === \"mainCard\") {\n//       setStateToMap(states.newBoard);\n//     } else {\n//       setStateToMap(states.mainCard);\n//     }\n//   };\n\n//   const [addCardTitle, setAddCardTitle] = useState(\"\");\n\n//   const handleAddCard = () => {\n//     if (addCardTitle === \"\") {\n//       toast.error(\"Add a Card Title\");\n//     } else {\n//       dispatch(addCard({ title: addCardTitle }));\n//       setAddCardTitle(\"\");\n//     }\n//   };\n\n//   useEffect(() => {\n//     setStateToMap(\n//       states.currState === \"mainCard\" ? states.mainCard : states.newBoard\n//     );\n//   }, [states]);\n\n//   useEffect(() => {\n//     if (!states.mainCard.length) {\n//       const defaultCards = [\n//         { id: 'myresources', groupName: 'Myresources' },\n//         { id: 'todo', groupName: 'Todo' },\n//         { id: 'doing', groupName: 'Doing' },\n//         { id: 'done', groupName: 'Done' },\n//       ];\n//       defaultCards.forEach(card => dispatch(addCard(card)));\n//     }\n//   }, [dispatch, states.mainCard.length]);\n\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-b from-cyan-500 to-blue-100 px-10 py-6\">\n//       <Navbar changeState={changeState} />\n//       <div>\n//         <Cards stateToMap={stateToMap} />\n//       </div>\n//       <div className=\"bg-white p-4 mt-6 rounded-lg shadow-lg flex items-center gap-4\">\n//         <h2 className=\"text-xl font-medium text-gray-800\">Add Card</h2>\n//         <input\n//           value={addCardTitle}\n//           onChange={(e) => setAddCardTitle(e.target.value)}\n//           type=\"text\"\n//           className=\"px-3 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-400\"\n//           placeholder=\"Add a new card title\"\n//         />\n//         <button\n//           onClick={handleAddCard}\n//           className=\"ml-2 px-4 py-2 rounded-md bg-blue-500 text-white hover:bg-blue-600 transition-colors\"\n//         >\n//           Submit\n//         </button>\n//       </div>\n//       <Toaster />\n//     </div>\n//   );\n// };\n\n// export default Home;","map":{"version":3,"names":[],"sources":["/Users/adarshchaturvedi/Desktop/untitled folder/Trello_taskmanagement/src/pages/Home.jsx"],"sourcesContent":["// // Home.jsx\n// import React, { useEffect, useState } from \"react\";\n// import Navbar from \"../components/Navbar\";\n// import Cards from \"../components/Cards\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { newBoardDispatch, addCard } from \"../redux/todoSlice\";\n// import toast, { Toaster } from \"react-hot-toast\";\n\n// const Home = () => {\n//   const dispatch = useDispatch();\n//   const states = useSelector((card) => card.todo);\n\n//   const [stateToMap, setStateToMap] = useState(\n//     states?.currState === \"mainCard\" ? states.mainCard : states.newBoard\n//   );\n\n//   const changeState = () => {\n//     dispatch(newBoardDispatch());\n\n//     if (states.currState === \"mainCard\") {\n//       setStateToMap(states.newBoard);\n//     } else {\n//       setStateToMap(states.mainCard);\n//     }\n//   };\n\n//   const [addCardTitle, setAddCardTitle] = useState(\"\");\n\n//   const handleAddCard = () => {\n//     if (addCardTitle === \"\") {\n//       toast.error(\"Add a Card Title\");\n//     } else {\n//       dispatch(addCard({ title: addCardTitle }));\n//       setAddCardTitle(\"\");\n//     }\n//   };\n\n//   useEffect(() => {\n//     setStateToMap(\n//       states.currState === \"mainCard\" ? states.mainCard : states.newBoard\n//     );\n//   }, [states]);\n\n//   useEffect(() => {\n//     if (!states.mainCard.length) {\n//       const defaultCards = [\n//         { id: 'myresources', groupName: 'Myresources' },\n//         { id: 'todo', groupName: 'Todo' },\n//         { id: 'doing', groupName: 'Doing' },\n//         { id: 'done', groupName: 'Done' },\n//       ];\n//       defaultCards.forEach(card => dispatch(addCard(card)));\n//     }\n//   }, [dispatch, states.mainCard.length]);\n\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-b from-cyan-500 to-blue-100 px-10 py-6\">\n//       <Navbar changeState={changeState} />\n//       <div>\n//         <Cards stateToMap={stateToMap} />\n//       </div>\n//       <div className=\"bg-white p-4 mt-6 rounded-lg shadow-lg flex items-center gap-4\">\n//         <h2 className=\"text-xl font-medium text-gray-800\">Add Card</h2>\n//         <input\n//           value={addCardTitle}\n//           onChange={(e) => setAddCardTitle(e.target.value)}\n//           type=\"text\"\n//           className=\"px-3 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-400\"\n//           placeholder=\"Add a new card title\"\n//         />\n//         <button\n//           onClick={handleAddCard}\n//           className=\"ml-2 px-4 py-2 rounded-md bg-blue-500 text-white hover:bg-blue-600 transition-colors\"\n//         >\n//           Submit\n//         </button>\n//       </div>\n//       <Toaster />\n//     </div>\n//   );\n// };\n\n// export default Home;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}