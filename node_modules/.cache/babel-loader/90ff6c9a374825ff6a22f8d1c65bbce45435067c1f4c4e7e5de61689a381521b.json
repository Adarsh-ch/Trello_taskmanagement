{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  currState: \"mainCard\",\n  mainCard: [{\n    id: 101,\n    groupName: \"My Resources\",\n    tasks: [{\n      id: 1,\n      title: \"Test-1\",\n      date: new Date().toLocaleString()\n    }, {\n      id: 2,\n      title: \"Test-2\",\n      date: new Date().toLocaleString()\n    }]\n  }, {\n    id: 102,\n    groupName: \"Todo\",\n    tasks: []\n  }, {\n    id: 103,\n    groupName: \"Doing\",\n    tasks: []\n  }, {\n    id: 104,\n    groupName: \"Done\",\n    tasks: []\n  }],\n  newBoard: [{\n    id: 543,\n    groupName: \"New Board\",\n    tasks: [{\n      id: 1,\n      title: \"new bord task\",\n      date: new Date().toLocaleString()\n    }, {\n      id: 2,\n      title: \"Test-2\",\n      date: new Date().toLocaleString()\n    }]\n  }]\n};\nexport const userSlice = createSlice({\n  name: \"card\",\n  initialState,\n  reducers: {\n    addTask: (state, action) => {\n      const items = Array.from(state.currState === \"mainCard\" ? state.mainCard : state.newBoard);\n      const a = items.find(item => item.id === action.payload.cardId);\n      const aArray = a.tasks;\n      aArray.push({\n        id: Date.now(),\n        title: action.payload.message,\n        date: new Date().toLocaleString()\n      });\n      return state;\n      // state.newBoard = JSON.parse(JSON.stringify(items));\n    },\n\n    addCard: (state, action) => {\n      // const items = Array.from(\n      //   state.currState === \"mainCard\" ? state.mainCard : state.newBoard\n      // );\n      // console.log(items);\n      // items.push({\n      //   id: Date.now(),\n      //   groupName: action.payload.title,\n      //   tasks: [],\n      // });\n\n      const card = state.currState === \"mainCard\" ? state.mainCard : state.newBoard;\n      card.push({\n        id: Date.now(),\n        groupName: action.payload.title,\n        tasks: []\n      });\n      return state;\n    },\n    deleteTask: (state, action) => {\n      const items = Array.from(state.currState === \"mainCard\" ? state.mainCard : state.newBoard);\n      const a = items.find(item => item.id === action.payload.cardId);\n      const aArray = a.tasks;\n      aArray.splice(aArray.findIndex(item => item.id === action.payload.id), 1);\n\n      // state.mainCard = JSON.parse(JSON.stringify(items));\n    },\n\n    deleteCard: (state, action) => {\n      const items = (state === null || state === void 0 ? void 0 : state.currState) === \"mainCard\" ? state.mainCard : state.newBoard;\n      console.log(items);\n      items.splice(items.findIndex(item => item.id === action.payload.cardId), 1);\n    },\n    editTask: (state, action) => {\n      const items = Array.from((state === null || state === void 0 ? void 0 : state.currState) === \"mainCard\" ? state.mainCard : state.newBoard);\n      const a = items.find(item => item.id === action.payload.cardId);\n      const aArray = a.tasks;\n      const b = aArray.find(item => item.id === action.payload.id);\n      b.title = action.payload.newMessage;\n      b.date = new Date().toLocaleString();\n\n      // state.mainCard = JSON.parse(JSON.stringify(items));\n    },\n\n    editCardName: (state, action) => {\n      const card = Array.from((state === null || state === void 0 ? void 0 : state.currState) === \"mainCard\" ? state.mainCard : state.newBoard);\n      const a = card.find(item => item.id === action.payload.cardId);\n      a.groupName = action.payload.title;\n    },\n    shiftTask: (state, action) => {\n      const items = Array.from((state === null || state === void 0 ? void 0 : state.currState) === \"mainCard\" ? state.mainCard : state.newBoard);\n      const a = items.find(item => item.id === Number(action.payload.res.source.droppableId));\n      const aArray = a.tasks;\n      const splicedItem = aArray.splice(action.payload.res.source.index, 1);\n      const b = items.find(item => item.id === Number(action.payload.res.destination.droppableId));\n      const bArray = b.tasks;\n      bArray.splice(action.payload.res.destination.index, 0, splicedItem[0]);\n    },\n    newBoardDispatch: (state, action) => {\n      if (state.currState === \"mainCard\") {\n        state.currState = \"newBoard\";\n      } else {\n        state.currState = \"mainCard\";\n      }\n    }\n  }\n});\nexport const {\n  addTask,\n  deleteTask,\n  editTask,\n  shiftTask,\n  removeFromFav,\n  updateFavourites,\n  editCardName,\n  newBoardDispatch,\n  addCard,\n  deleteCard\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","currState","mainCard","id","groupName","tasks","title","date","Date","toLocaleString","newBoard","userSlice","name","reducers","addTask","state","action","items","Array","from","a","find","item","payload","cardId","aArray","push","now","message","addCard","card","deleteTask","splice","findIndex","deleteCard","console","log","editTask","b","newMessage","editCardName","shiftTask","Number","res","source","droppableId","splicedItem","index","destination","bArray","newBoardDispatch","removeFromFav","updateFavourites","actions","reducer"],"sources":["/Users/adarshchaturvedi/Desktop/untitled folder 3/Trello_taskmanagement/src/redux/todoSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  currState: \"mainCard\",\n  mainCard: [\n    {\n      id: 101,\n      groupName: \"My Resources\",\n      tasks: [\n        { id: 1, title: \"Test-1\", date: new Date().toLocaleString() },\n        { id: 2, title: \"Test-2\", date: new Date().toLocaleString() },\n      ],\n    },\n    {\n      id: 102,\n      groupName: \"Todo\",\n      tasks: [],\n    },\n    {\n      id: 103,\n      groupName: \"Doing\",\n      tasks: [],\n    },\n    {\n      id: 104,\n      groupName: \"Done\",\n      tasks: [],\n    },\n  ],\n  newBoard: [\n    {\n      id: 543,\n      groupName: \"New Board\",\n      tasks: [\n        { id: 1, title: \"new bord task\", date: new Date().toLocaleString() },\n        { id: 2, title: \"Test-2\", date: new Date().toLocaleString() },\n      ],\n    },\n  ],\n};\n\nexport const userSlice = createSlice({\n  name: \"card\",\n  initialState,\n  reducers: {\n    addTask: (state, action) => {\n      const items = Array.from(\n        state.currState === \"mainCard\" ? state.mainCard : state.newBoard\n      );\n      const a = items.find((item) => item.id === action.payload.cardId);\n      const aArray = a.tasks;\n      aArray.push({\n        id: Date.now(),\n        title: action.payload.message,\n        date: new Date().toLocaleString(),\n      });\n\n      return state;\n      // state.newBoard = JSON.parse(JSON.stringify(items));\n    },\n\n    addCard: (state, action) => {\n      // const items = Array.from(\n      //   state.currState === \"mainCard\" ? state.mainCard : state.newBoard\n      // );\n      // console.log(items);\n      // items.push({\n      //   id: Date.now(),\n      //   groupName: action.payload.title,\n      //   tasks: [],\n      // });\n\n      const card =\n        state.currState === \"mainCard\" ? state.mainCard : state.newBoard;\n      card.push({\n        id: Date.now(),\n        groupName: action.payload.title,\n        tasks: [],\n      });\n\n      return state;\n    },\n\n    deleteTask: (state, action) => {\n      const items = Array.from(\n        state.currState === \"mainCard\" ? state.mainCard : state.newBoard\n      );\n      const a = items.find((item) => item.id === action.payload.cardId);\n      const aArray = a.tasks;\n\n      aArray.splice(\n        aArray.findIndex((item) => item.id === action.payload.id),\n        1\n      );\n\n      // state.mainCard = JSON.parse(JSON.stringify(items));\n    },\n\n    deleteCard: (state, action) => {\n      const items =\n        state?.currState === \"mainCard\" ? state.mainCard : state.newBoard;\n      console.log(items);\n\n      items.splice(\n        items.findIndex((item) => item.id === action.payload.cardId),\n        1\n      );\n    },\n\n    editTask: (state, action) => {\n      const items = Array.from(\n        state?.currState === \"mainCard\" ? state.mainCard : state.newBoard\n      );\n      const a = items.find((item) => item.id === action.payload.cardId);\n      const aArray = a.tasks;\n\n      const b = aArray.find((item) => item.id === action.payload.id);\n      b.title = action.payload.newMessage;\n      b.date = new Date().toLocaleString();\n\n      // state.mainCard = JSON.parse(JSON.stringify(items));\n    },\n\n    editCardName: (state, action) => {\n      const card = Array.from(\n        state?.currState === \"mainCard\" ? state.mainCard : state.newBoard\n      );\n      const a = card.find((item) => item.id === action.payload.cardId);\n\n      a.groupName = action.payload.title;\n    },\n\n    shiftTask: (state, action) => {\n      const items = Array.from(\n        state?.currState === \"mainCard\" ? state.mainCard : state.newBoard\n      );\n\n      const a = items.find(\n        (item) => item.id === Number(action.payload.res.source.droppableId)\n      );\n      const aArray = a.tasks;\n\n      const splicedItem = aArray.splice(action.payload.res.source.index, 1);\n\n      const b = items.find(\n        (item) => item.id === Number(action.payload.res.destination.droppableId)\n      );\n      const bArray = b.tasks;\n\n      bArray.splice(action.payload.res.destination.index, 0, splicedItem[0]);\n    },\n\n    newBoardDispatch: (state, action) => {\n      if (state.currState === \"mainCard\") {\n        state.currState = \"newBoard\";\n      } else {\n        state.currState = \"mainCard\";\n      }\n    },\n  },\n});\n\nexport const {\n  addTask,\n  deleteTask,\n  editTask,\n  shiftTask,\n  removeFromFav,\n  updateFavourites,\n  editCardName,\n  newBoardDispatch,\n  addCard,\n  deleteCard,\n} = userSlice.actions;\n\nexport default userSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}